{"version":3,"file":"src_app_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;;AAAtB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;IAW5B,eAAe,SAAf,eAAe;;AAAf,eAAe;IAT3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACnBsB;AACT;AACQ;AACY;IAOhD,SAAS,SAAT,SAAS;IAGpB,YAAqB,cAA8B,EAAU,MAAc,EAAU,eAAgC;QAAhG,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAE1H,QAAQ;IACR,CAAC;IAEI,KAAK;;YACR,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,EAAE;gBAChD,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;gBAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;gBAC/B,IAAI,CAAC,IAAI,GAAG,EAAE;gBACd,IAAI,CAAC,IAAI,GAAG,EAAE;aACf;iBAAM;gBACL,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;oBACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAC,eAAe,CAAC,EACrC;wBACE,WAAW,EAAE,EAAE,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;qBACrD,CAAC;oBACJ,IAAI,CAAC,IAAI,GAAG,EAAE;oBACd,IAAI,CAAC,IAAI,GAAG,EAAE;iBACf;qBAAM;oBACL,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;aACF;QACH,CAAC;KAAA;IAED,cAAc;QACZ,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC;QACjE,IAAI,EAAE,EAAE;YACN,IAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO,IAAI;;gBACxC,OAAO,KAAK;SACpB;;YAAM,OAAO,KAAK;IAErB,CAAC;IAEK,UAAU;;YACd,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,+CAA+C;gBACvD,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,IAAI;wBACV,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;;;;;;;AAhDU,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kEAAgC;;KAEjC,CAAC;GACW,SAAS;AAAA","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { StudentService } from '../services/student.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  public user: string\r\n  public pass: string\r\n  constructor( private studentService: StudentService, private router: Router, private alertController: AlertController) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n \r\n async login() {\r\n    if (this.user == \"admin\" && this.pass == \"admin\") {\r\n      this.studentService.adminSi()\r\n      this.router.navigate(['/home'])\r\n      this.user = \"\"\r\n      this.pass = \"\"\r\n    } else {\r\n      if (this.alumnoValidado()) {\r\n        this.router.navigate( ['/view-student'],\r\n          {\r\n            queryParams: { controlnumber: this.user.toString() }\r\n          })\r\n        this.user = \"\"\r\n        this.pass = \"\"\r\n      } else {\r\n        this.loginAlert();\r\n      }\r\n    }\r\n  }\r\n\r\n  alumnoValidado(): Boolean {\r\n    let st = this.studentService.getStudentByControlNumber(this.user)\r\n    if (st) {\r\n      if (st.nip.toString() == this.pass) return true\r\n       else  return false\r\n    } else return false\r\n    \r\n  }\r\n\r\n  async loginAlert() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Credenciales incorrectas por favor reviselas.',\r\n      buttons: [\r\n        {\r\n          text: 'OK',\r\n          role: 'confirm'\r\n        },\r\n      ],\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}